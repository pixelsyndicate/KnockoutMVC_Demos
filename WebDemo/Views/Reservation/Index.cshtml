@using WebDemo.Models
@*@model IEnumerable<Reservation>*@

@{
    ViewBag.Title = "Reservations";
    Layout = "~/Views/Shared/_SpaLayout.cshtml";
}
@section Scripts {
    <script>
        // the model knockout will use
        var model = {
            reservations: ko.observableArray(),
            // extending the model to track two pieces of info need to create/edit
            editor: {
                // id: ko.observable("0"),
                name: ko.observable(""),
                location: ko.observable("")
            }
        };

        // helper method to handle ajax calls to webapi
        // ( httpMethod, callback, url parm )
        function sendAjaxRequest(httpMethod, callback, url) {
            $.ajax("/api/web" + (url ? "/" + url : ""), {
                type: httpMethod,
                success: callback
            });
        }

        // helper method to handle ajax calls to webapi
        // (httpMethod, callback, url parm, new model)
        function sendAjaxPostRequest(httpMethod, callback, url, reqData) {
            var reqD = ko.toJSON(reqData);

            $.ajax("/api/web" + (url ? "/" + url : ""), {
                type: httpMethod,
                success: callback,
                contentType: "application/json; charset=utf-8",
                data: reqD
            });
        }

        function getAllItems() {
            sendAjaxRequest( // httpMethod, callback, url parm
                 "GET",
                 function (data) {
                     model.reservations.removeAll();
                     for (var i = 0; i < data.length; i++) {
                         model.reservations.push(data[i]);
                     }
                 });
        }

        function removeItem(item) {
            sendAjaxRequest(// httpMethod, callback, url parm
                "DELETE",
                function () {
                    // shouldn't have to get all items from the server if the model is already kept in state on the browser
                    // getAllItems();

                    for (var i = 0; i < model.reservations().length; i++) {
                        if (model.reservations()[i].ReservationId == item.ReservationId) {
                            // also remove it from my local model
                            model.reservations.remove(model.reservations()[i]);
                            break;
                        }
                    }
                },
                item.ReservationId
                );

        }

        // click event handler for edit
        function handleEditorClick() {
            sendAjaxPostRequest("POST", function (newItem) {
                model.reservations.push(newItem);
                model.editor.name = "";
                model.editor.location = "";
            }, null, {
                ClientName: model.editor.name,
                Location: model.editor.location
            });
        }

        // ensure knockout has binding on the model from webapi
        $(document).ready(function () {
            getAllItems();
            ko.applyBindings(model);
        });
    </script>
}

@section Body {
    <div id="summary" class="section panel panel-primary">

        <div class="panel-heading">Reservation Summary</div>
        <div class="panel-body">
            <table class="table table-striped table-condensed">
                <thead>
                    <tr><td>ID</td><td>Name</td><td>Location</td></tr>
                </thead>
                <tbody data-bind="foreach: model.reservations">
                    <tr>
                        <td data-bind="text: ReservationId"></td>
                        <td data-bind="text: ClientName"></td>
                        <td data-bind="text: Location"></td>
                        <td>
                            <button class="btn btn-xs btn-primary"
                                    data-bind="click: removeItem">
                                Remove
                            </button>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>

        @* -- > this is teh MVC view ... turning it off since we are using knockout ... Html.Partial("Summary", Model)*@
    </div>
    <div id="editor" class="section panel panel-primary">
        <div class="panel-heading">
            Create Reservation
        </div>
        <div class="panel-body">
            @*<input class="form-control" data-bind="value: model.editor.id" />*@
            <div class="form-group">
                <label>Client Name</label>
                <input class="form-control" data-bind="value: model.editor.name" />
            </div>
            <div class="form-group">
                <label>Location</label>
                <input class="form-control" data-bind="value: model.editor.location" />
            </div>
            <button class="btn btn-primary" data-bind="click: handleEditorClick">Save</button>
        </div>

        @*-- > this is teh MVC view ... turning it off since we are using knockout .... @Html.Partial("Editor", new Reservation())*@
    </div>
}
